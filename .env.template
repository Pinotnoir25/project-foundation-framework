# =============================================================================
# PROJECT CONFIGURATION TEMPLATE
# =============================================================================
# Copy this file to .env and update with your project-specific values
# This template provides a generic structure for any type of project

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
NODE_ENV=development
# Options: development, staging, production

APP_NAME=your-app-name
APP_VERSION=1.0.0
APP_PORT=3000
APP_HOST=localhost

# Logging Configuration
LOG_LEVEL=info
# Options: error, warn, info, debug, trace
LOG_FORMAT=json
# Options: json, pretty, simple

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Configure your database connection (PostgreSQL, MySQL, MongoDB, etc.)

# Database Type
DB_TYPE=postgresql
# Options: postgresql, mysql, mongodb, sqlite, etc.

# Connection Settings
DB_HOST=localhost
DB_PORT=5432
DB_NAME=your_database_name
DB_USER=your_db_user
DB_PASSWORD=your_db_password

# Connection Pool Settings
DB_POOL_MIN=2
DB_POOL_MAX=10
DB_CONNECTION_TIMEOUT_MS=10000
DB_IDLE_TIMEOUT_MS=60000

# Database-Specific Options
# Add any database-specific configuration here
# DB_SSL_ENABLED=true
# DB_REPLICA_SET=your-replica-set
# DB_AUTH_SOURCE=admin

# =============================================================================
# EXTERNAL SERVICE CONNECTIONS
# =============================================================================
# Configure connections to external services (APIs, message queues, etc.)

# SSH Tunnel Configuration (if needed)
SSH_ENABLED=false
SSH_HOST=your-ssh-host.com
SSH_PORT=22
SSH_USERNAME=your-username
SSH_KEY_PATH=~/.ssh/id_rsa
SSH_PASSPHRASE=
# Leave empty if no passphrase

# API Gateway / External Services
EXTERNAL_API_URL=https://api.example.com
EXTERNAL_API_KEY=your-api-key
EXTERNAL_API_TIMEOUT_MS=30000

# Message Queue Configuration
MESSAGE_QUEUE_TYPE=rabbitmq
# Options: rabbitmq, kafka, redis, sqs, etc.
MESSAGE_QUEUE_URL=amqp://localhost:5672
MESSAGE_QUEUE_USERNAME=guest
MESSAGE_QUEUE_PASSWORD=guest

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-change-in-production
JWT_EXPIRES_IN=7d
JWT_REFRESH_SECRET=your-refresh-token-secret
JWT_REFRESH_EXPIRES_IN=30d

# Session Configuration
SESSION_SECRET=your-session-secret-change-in-production
SESSION_TIMEOUT_MINUTES=30

# Encryption Keys
ENCRYPTION_KEY=your-32-character-encryption-key
# Must be exactly 32 characters for AES-256
ENCRYPTION_ALGORITHM=aes-256-gcm

# API Security
API_KEY_HEADER=X-API-Key
ALLOWED_API_KEYS=dev-key-1,dev-key-2
# Comma-separated list of allowed API keys

# OAuth Configuration (if applicable)
OAUTH_ENABLED=false
OAUTH_CLIENT_ID=your-oauth-client-id
OAUTH_CLIENT_SECRET=your-oauth-client-secret
OAUTH_REDIRECT_URI=http://localhost:3000/auth/callback

# =============================================================================
# CORS & NETWORK CONFIGURATION
# =============================================================================

# CORS Settings
CORS_ENABLED=true
CORS_ORIGIN=http://localhost:3000,http://localhost:3001
# Comma-separated list of allowed origins
CORS_CREDENTIALS=true

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_WINDOW_MS=900000
# 15 minutes
RATE_LIMIT_MAX_REQUESTS=100

# Proxy Configuration
HTTP_PROXY=
HTTPS_PROXY=
NO_PROXY=localhost,127.0.0.1

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Metrics Collection
METRICS_ENABLED=true
METRICS_PORT=9090
METRICS_PATH=/metrics

# Health Checks
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health
HEALTH_CHECK_INTERVAL_MS=30000

# Distributed Tracing
TRACING_ENABLED=false
TRACING_SERVICE_NAME=your-service-name
TRACING_ENDPOINT=http://localhost:4318
TRACING_SAMPLE_RATE=1.0

# Application Performance Monitoring
APM_ENABLED=false
APM_SERVICE_NAME=your-service
APM_SECRET_TOKEN=your-apm-token
APM_SERVER_URL=http://localhost:8200

# =============================================================================
# CACHING CONFIGURATION
# =============================================================================

# Cache Type
CACHE_TYPE=redis
# Options: redis, memcached, memory, none

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_KEY_PREFIX=app:

# Cache Settings
CACHE_TTL_SECONDS=300
# 5 minutes default TTL
CACHE_MAX_KEYS=10000

# =============================================================================
# FILE STORAGE
# =============================================================================

# Storage Type
STORAGE_TYPE=local
# Options: local, s3, gcs, azure

# Local Storage
LOCAL_STORAGE_PATH=/var/app/storage
LOCAL_TEMP_PATH=/tmp

# Cloud Storage (S3 Example)
S3_BUCKET=your-bucket-name
S3_REGION=us-east-1
S3_ACCESS_KEY_ID=your-access-key
S3_SECRET_ACCESS_KEY=your-secret-key
S3_ENDPOINT=
# Leave empty for AWS S3, or specify for S3-compatible services

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

EMAIL_ENABLED=false
EMAIL_PROVIDER=smtp
# Options: smtp, sendgrid, ses, mailgun

# SMTP Configuration
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@example.com
SMTP_PASS=your-app-password
EMAIL_FROM=noreply@example.com
EMAIL_REPLY_TO=support@example.com

# =============================================================================
# NOTIFICATION SERVICES
# =============================================================================

# Slack Integration
SLACK_ENABLED=false
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL
SLACK_CHANNEL=#general

# Push Notifications
PUSH_NOTIFICATIONS_ENABLED=false
FCM_SERVER_KEY=your-fcm-server-key
APNS_KEY_PATH=/path/to/apns/key.p8
APNS_KEY_ID=your-key-id
APNS_TEAM_ID=your-team-id

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Feature Toggles
FEATURE_NEW_UI=false
FEATURE_BETA_API=false
FEATURE_ADVANCED_ANALYTICS=true
FEATURE_REAL_TIME_SYNC=false
FEATURE_AUDIT_LOGGING=true

# A/B Testing
AB_TESTING_ENABLED=false
AB_TESTING_PERCENTAGE=50

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================

# Development Settings
DEV_HOT_RELOAD=true
DEV_SOURCE_MAPS=true
DEV_VERBOSE_LOGGING=false

# Testing Configuration
TEST_DB_HOST=localhost
TEST_DB_PORT=5432
TEST_DB_NAME=test_database
TEST_TIMEOUT_MS=60000
TEST_PARALLEL=true

# Mock Services
USE_MOCK_SERVICES=false
MOCK_SERVICE_DELAY_MS=100

# Seed Data
SEED_DATA_ON_START=false
SEED_DATA_PATH=/path/to/seed/data

# =============================================================================
# SCHEDULED JOBS
# =============================================================================

# Job Scheduler
SCHEDULER_ENABLED=true
SCHEDULER_TIMEZONE=UTC

# Cleanup Jobs
CLEANUP_OLD_LOGS_ENABLED=true
CLEANUP_OLD_LOGS_SCHEDULE=0 2 * * *
# Daily at 2 AM
CLEANUP_RETENTION_DAYS=30

# Backup Jobs
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 3 * * *
# Daily at 3 AM
BACKUP_RETENTION_DAYS=7
BACKUP_PATH=/backups

# =============================================================================
# INTEGRATION CONFIGURATION
# =============================================================================

# Webhook Configuration
WEBHOOK_ENABLED=false
WEBHOOK_SECRET=your-webhook-secret
WEBHOOK_TIMEOUT_MS=10000

# Third-party Integrations
# Add your specific integrations here
# GITHUB_TOKEN=your-github-token
# JIRA_API_TOKEN=your-jira-token
# STRIPE_SECRET_KEY=your-stripe-secret

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Worker Configuration
WORKER_PROCESSES=auto
# 'auto' uses number of CPU cores
WORKER_THREADS=4
WORKER_MEMORY_LIMIT_MB=512

# Request Limits
MAX_REQUEST_SIZE_MB=10
MAX_FILE_UPLOAD_SIZE_MB=100
REQUEST_TIMEOUT_MS=300000
# 5 minutes

# Query Optimization
ENABLE_QUERY_LOGGING=true
SLOW_QUERY_THRESHOLD_MS=1000
QUERY_TIMEOUT_MS=30000

# =============================================================================
# COMPLIANCE & LEGAL
# =============================================================================

# Data Retention
DATA_RETENTION_DAYS=365
AUDIT_LOG_RETENTION_DAYS=2555
# 7 years

# Privacy Settings
ANONYMIZE_USER_DATA=false
GDPR_MODE=false
COOKIE_CONSENT_REQUIRED=true

# =============================================================================
# NOTES
# =============================================================================
# 1. Never commit this file with real credentials
# 2. Use strong, unique passwords for production
# 3. Rotate secrets regularly
# 4. Keep environment-specific values in separate .env files
# 5. Document any new environment variables you add
# 6. Use a secret management service in production (Vault, AWS Secrets Manager, etc.)